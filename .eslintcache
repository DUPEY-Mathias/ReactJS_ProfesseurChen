[{"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\index.js":"1","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\reportWebVitals.js":"2","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\App.js":"3","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\Home.js":"4","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Quizz\\PresentationQuizz.js":"5","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Header\\Navbar.js":"6","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Quizz\\Quizz.js":"7","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\Card.js":"8","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\Meteo.js":"9","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Header\\Button.js":"10","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Levels\\Index.js":"11","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\QuizzLegend\\index.js":"12","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\ProgressBar\\index.js":"13","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\EndQuizz\\index.js":"14","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\fetchWeather.js":"15","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\CardItem.js":"16"},{"size":517,"mtime":1612512503778,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1612512503779,"results":"19","hashOfConfig":"18"},{"size":741,"mtime":1612726927225,"results":"20","hashOfConfig":"18"},{"size":491,"mtime":1612512503778,"results":"21","hashOfConfig":"18"},{"size":197,"mtime":1612720988115,"results":"22","hashOfConfig":"18"},{"size":1854,"mtime":1612726001153,"results":"23","hashOfConfig":"18"},{"size":5323,"mtime":1612720988120,"results":"24","hashOfConfig":"18"},{"size":1528,"mtime":1612512503777,"results":"25","hashOfConfig":"18"},{"size":1465,"mtime":1612513415569,"results":"26","hashOfConfig":"18"},{"size":703,"mtime":1612512503775,"results":"27","hashOfConfig":"18"},{"size":265,"mtime":1612720988108,"results":"28","hashOfConfig":"18"},{"size":12126,"mtime":1612724150305,"results":"29","hashOfConfig":"18"},{"size":846,"mtime":1612720988110,"results":"30","hashOfConfig":"18"},{"size":1741,"mtime":1612720988095,"results":"31","hashOfConfig":"18"},{"size":382,"mtime":1612513403537,"results":"32","hashOfConfig":"18"},{"size":625,"mtime":1612512503777,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"q6mb1w",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\index.js",[],["70","71"],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\reportWebVitals.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\App.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\Home.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Quizz\\PresentationQuizz.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Header\\Navbar.js",["72"],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Quizz\\Quizz.js",["73"],"import React, { Component, Fragment } from 'react'\r\nimport Index from '../Levels/Index';\r\nimport ProgressBar from '../ProgressBar'\r\nimport {QuizzLegend} from '../QuizzLegend/'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport EndQuizz from '../EndQuizz'\r\n\r\ntoast.configure();\r\n\r\nclass Quizz extends Component {\r\n\r\n  state = {\r\n    themeNames:[\"legende\",\"ligue\",\"pop\"],\r\n    MaxQuestions : 10,\r\n    //quizLevel:0 , on veut pas Ã©crÃ©menter donc on sÃ©lectionne juste , l'index 0\r\n    stockQuestions: [],\r\n    question: null,\r\n    options: [],\r\n    idQuestion: 0,\r\n    btnDisabled: true,\r\n    userAnswe:null,\r\n    score : 0,\r\n    /**mathias */\r\n    quizOver: false\r\n  }\r\n\r\n  storedDataRef = React.createRef();\r\n\r\n  loadedQuestions = theme =>{\r\n   const legendeQuestion =QuizzLegend[0].quizz[theme]; // Ceci c'est le tableau de question LÃ©gende\r\n   if(legendeQuestion.length >= this.state.MaxQuestions){\r\n\r\n    //Le ref ici stock toutes les questions et rÃ©ponses\r\n    this.storedDataRef.current = legendeQuestion;\r\n    \r\n   const newArray = legendeQuestion.map( ({answer, ...keepRest}) => keepRest); //enleve les rÃ©ponses\r\n   this.setState({\r\n     stockQuestions : newArray\r\n   })\r\n\r\n  } else {\r\n    console.log(\"Les questions ne sont pas fini\")\r\n  }\r\n  }\r\n\r\n  componentDidMount () {\r\n    // Comme la classe est juste au dessus on insÃ¨re le this\r\n    \r\n    this.loadedQuestions(this.state.themeNames[0])\r\n  }\r\n\r\n  nextQuestion = () => {\r\n     //On vas comparer idQuestion Ã  Maxquestions -1\r\n     if(this.state.idQuestion === this.state.MaxQuestions -1){  // On verifie si on est pas Ã  la derniere question\r\n      this.EndQuizz();\r\n    } else {\r\n        this.setState( prevState=>({\r\n          idQuestion : prevState.idQuestion + 1 // qui va incrÃ©menter le state score\r\n        }) )\r\n    }\r\n    const goodAnswer = this.storedDataRef.current[this.state.idQuestion].answer; // tableau legende question que l'on cible , et on rÃ©cupÃ¨re la rÃ©ponse\r\n\r\n    if (this.state.userAnswer === goodAnswer){ //On compare la rÃ©ponse et la selection de l'utilisateur\r\n        this.setState( prevState => ({  \r\n          score: prevState.score + 1 // on incrÃ©mente donc le score de l'utilsateur\r\n        }))\r\n        toast.success('ðŸ¦„ Bravo +1pt', {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n    \r\n          });\r\n\r\n    } else {\r\n      toast.error(' RatÃ© 0 pt !', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      \r\n        });\r\n    };\r\n\r\n  }\r\n\r\n \r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.state.stockQuestions !== prevState.stockQuestions) {\r\n        this.setState({\r\n            question: this.state.stockQuestions[this.state.idQuestion].question, //permet de cibler les question de l'array\r\n            options: this.state.stockQuestions[this.state.idQuestion].options\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    if (this.state.idQuestion !== prevState.idQuestion) { // on switch d'id de question donc on switch de question grÃ ce a prevState\r\n      this.setState({\r\n        question: this.state.stockQuestions[this.state.idQuestion].question, //permet de cibler les question de l'array\r\n        options: this.state.stockQuestions[this.state.idQuestion].options,\r\n        userAnswer : null, // on vide la rÃ©ponse de l'utilisateur\r\n        btnDisabled: true,\r\n\r\n\r\n\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  submitAnswer = selectedAnswer => {\r\n      this.setState({\r\n        userAnswer: selectedAnswer,\r\n        btnDisabled: false,\r\n      })\r\n  }\r\n\r\n  getPercentage = (MaxQuest, OurScore) => (OurScore/ MaxQuest) * 100;   //taux de rÃ©ussite\r\n\r\n  EndQuizz = () => {\r\n\r\n    const gradePercent = this.getPercentage(this.state.MaxQuestions, this.state.score);\r\n\r\n\r\n\r\n      this.setState({\r\n        quizOver: true\r\n      })\r\n  }\r\n\r\n \r\n\r\n\r\n  render() {\r\n\r\n   const displayOptions = this.state.options.map((options, index) => {\r\n      return(\r\n        <p key={index} \r\n        className={`answerOptions ${this.state.userAnswer === options ? \"selected\" : null}`} // Tu rajoutes la class selected, a la rÃ©ponse sur laquelle j'ai cliquÃ©\r\n        onClick={() => this.submitAnswer(options)} // Fonction qui se lance seulement au click sur une option, elle activera le bouton suivant \r\n        >\r\n          \r\n          {options}</p>\r\n      )\r\n    })\r\n\r\n  return  this.state.quizOver ? ( // si quizz Over retourne true alors on affiche end Quizz le rÃ©cap des questions\r\n      <EndQuizz ref={ this.storedDataRef}\r\n      themeNames = {this.state.themeNames}\r\n      score={this.state.score}\r\n      MaxQuestions={this.state.MaxQuestions}\r\n      percent={this.state.percent}\r\n      />\r\n    )\r\n    :\r\n    (\r\n      \r\n      <Fragment>\r\n      <Index/>\r\n      <ProgressBar idQuestion ={this.state.idQuestion} MaxQuestions={this.state.MaxQuestions}/>\r\n      <h2> {this.state.question} </h2> \r\n\r\n        {displayOptions}\r\n\r\n      <button disabled={this.state.btnDisabled} \r\n      className=\"btnSubmit\"\r\n      onClick={this.nextQuestion}\r\n      >Suivant</button>\r\n    </Fragment>\r\n\r\n     \r\n    )\r\n  }\r\n}\r\n\r\nexport default Quizz\r\n","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\Card.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\Meteo.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Header\\Button.js",["74"],"import React from 'react';\r\nimport './Button.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\n\r\nconst SIZES = ['btn--medium,','btn--large'];\r\nexport const Button = ({ children, type, onClick, buttonStyle, buttonSize}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n    return (\r\n        <Link to='/Connexion' className='btn-mobile'>\r\n            <button className={`btn ${checkButtonStyle} ${checkButtonStyle}`} onClick={onClick} type={type}>\r\n                {children}\r\n            </button>\r\n        </Link>\r\n    )\r\n};","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Levels\\Index.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\QuizzLegend\\index.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\ProgressBar\\index.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\EndQuizz\\index.js",["75","76"],"import React, {Fragment, useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// use effect va jouer le role de component didmount et didupdate\r\n\r\n  const EndQuizz = React.forwardRef((props , ref) => {\r\n\r\n    const {themesNames, \r\n      score , \r\n      maxQuestions, \r\n      percent} = props;\r\n\r\n    const [asked, setasked] = useState([]);\r\n\r\n    useEffect(()=>{\r\n      setasked(ref.current)\r\n    }, [ref])\r\n\r\n    \r\n   const questionAnswer =  asked.map( question => {\r\n      return (\r\n        <tr key={question.id}>\r\n          <td>{question.question}</td>\r\n          <td>{question.answer}</td>\r\n          <td>\r\n            <button className=\"btnInfo\">Infos</button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    }) \r\n    //\r\n\r\n    return (\r\n      <Fragment> \r\n      <div className=\"stepsBtnContainer\">\r\n        <p className=\"successMsg\"> Bravo, voici votre score ! </p>\r\n          <button className=\"btnResult success\">Retour Ã  l'accueil\r\n          <Link to='/' className='nav-links'/>\r\n          </button>\r\n      </div>\r\n      <div className=\"percentage\">\r\n        <div className=\"progressPercent\">RÃ©ussite : {percent} % </div>\r\n        <div className=\"progressPercent\">Note: {score}/ 10 </div>\r\n      </div>\r\n      <hr></hr>\r\n      <p> Les rÃ©ponses aux questions posÃ©es : </p>\r\n      <div className=\"answerContainer\">\r\n        <table className=\"answers\">\r\n          <thead>\r\n            <tr>\r\n              <th>Question</th>\r\n              <th> Vos rÃ©ponses</th>\r\n              <th>Info</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {questionAnswer}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  })\r\n\r\n\r\nexport default React.memo(EndQuizz)\r\n","C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\fetchWeather.js",[],"C:\\Users\\mathi\\Documents\\GitHub\\ReactJS_ProfesseurChen\\src\\components\\Landing\\CardItem.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":10,"nodeType":"83","messageId":"84","endLine":7,"endColumn":16},{"ruleId":"81","severity":1,"message":"85","line":129,"column":11,"nodeType":"83","messageId":"84","endLine":129,"endColumn":23},{"ruleId":"81","severity":1,"message":"86","line":11,"column":11,"nodeType":"83","messageId":"84","endLine":11,"endColumn":26},{"ruleId":"81","severity":1,"message":"87","line":9,"column":12,"nodeType":"83","messageId":"84","endLine":9,"endColumn":23},{"ruleId":"81","severity":1,"message":"88","line":11,"column":7,"nodeType":"83","messageId":"84","endLine":11,"endColumn":19},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'button' is assigned a value but never used.","Identifier","unusedVar","'gradePercent' is assigned a value but never used.","'checkButtonSize' is assigned a value but never used.","'themesNames' is assigned a value but never used.","'maxQuestions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]